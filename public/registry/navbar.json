{
  "name": "navbar",
  "type": "registry:ui",
  "description": "A responsive navigation bar with smooth animations and theme toggle support",
  "dependencies": [
    "framer-motion"
  ],
  "registryDependencies": [
    "use-mobile",
    "undefined/registry/theme-set.json"
  ],
  "files": [
    {
      "path": "ui/navbar.tsx",
      "content": "'use client'\n\nimport { cn } from '@/lib/utils'\nimport { motion } from 'framer-motion'\nimport type { Url } from 'next/dist/shared/lib/router/router'\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { useState, useEffect } from 'react'\nimport { useIsMobile } from '@/hooks/use-mobile'\nimport { ThemeToggle } from '@/components/(shared)/theme-toggle'\n\nexport interface NavigationItem {\n  name: string // Required\n  href: Url // Required - for navigation links\n  icon: React.ReactNode // Required - for mobile display\n}\n\nexport interface NavBarProps {\n  navigationItems: NavigationItem[]\n  className?: string\n  withThemeToggle?: boolean\n}\n\nfunction NavBar({\n  navigationItems,\n  className,\n  withThemeToggle = false,\n}: NavBarProps) {\n  const [activeTab, setActiveTab] = useState<string | null>(null)\n  const pathname = usePathname()\n  const isMobile = useIsMobile()\n\n  // Set active tab based on current pathname on mount\n  useEffect(() => {\n    const activeItem = navigationItems.find((item) =>\n      typeof item.href === 'string'\n        ? item.href === pathname\n        : item.href.pathname === pathname\n    )\n    if (activeItem) {\n      setActiveTab(activeItem.name)\n    }\n  }, [pathname, navigationItems])\n\n  return (\n    <div\n      className={cn(\n        'fixed left-1/2 -translate-x-1/2 z-50',\n        isMobile ? 'bottom-0 mb-6' : 'top-0 pt-6',\n        className\n      )}\n    >\n      <div className=\"flex items-center gap-3 bg-background/10 border border-border backdrop-blur-sm py-1 px-1 rounded-full shadow-lg\">\n        {navigationItems.map((item) => {\n          const isActive = activeTab === item.name\n\n          return (\n            <Link\n              key={item.name}\n              href={item.href}\n              onClick={() => setActiveTab(item.name)}\n              className={cn(\n                'relative cursor-pointer text-base font-semibold px-6 py-2 rounded-full transition-colors',\n                'text-foreground hover:text-primary hover:bg-muted/60',\n                isActive && 'bg-muted text-primary'\n              )}\n            >\n              {isMobile ? item.icon : item.name}\n              {isActive && (\n                <motion.div\n                  layoutId=\"lamp\"\n                  className=\"absolute inset-0 w-full bg-primary/10 rounded-full -z-10\"\n                  initial={false}\n                  transition={{\n                    type: 'spring',\n                    stiffness: 300,\n                    damping: 30,\n                  }}\n                />\n              )}\n            </Link>\n          )\n        })}\n        {withThemeToggle && <ThemeToggle />}\n      </div>\n    </div>\n  )\n}\n\nexport { NavBar }\n",
      "type": "registry:ui"
    }
  ]
}